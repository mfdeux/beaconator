[tool.poetry]
name = "beaconator"
version = "0.1.0"
description = ""
authors = ["Marc Ford <mrfxyz567@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/mfdeux/beaconator"
packages = [{ include = "beaconator" }]
include = ["data/*"]

[tool.poetry.dependencies]
python = "^3.8"
pip = "^20.2.1"
fastapi = "^0.60.1"
uvicorn = "^0.11.8"
sqlalchemy = "^1.3.18"
click = "^7.1.2"
aiofiles = "^0.5.0"
aiohttp = "^3.6.2"
pyjwt = "^1.7.1"
pyyaml = "^5.3.1"
gunicorn = "^20.0.4"

[tool.poetry.dev-dependencies]
pytest = "^6.0"
ipython = "^7.17.0"
black = "^19.10b0"
isort = "^5.3.0"
requests = "^2.24.0"
coverage = {extras = ["toml"], version = "^5.2.1"}
nox = "^2020.5.24"
pytest-cov = "^2.10.0"
mypy = "^0.782"

[tool.poetry.scripts]
beaconator = "beaconator.cli:cli"

[tool.black]
# https://github.com/psf/black
line-length = 88
target_version = ['py38']
exclude = '''
(
  /(
    \.git
    | \.mypy_cache
    | \.pytest_cache
    | htmlcov
    | venv
    | .venv
  )/
)
'''

[tool.isort]
# https://github.com/timothycrosley/isort
# https://github.com/timothycrosley/isort/wiki/isort-Settings
line_length = 88
indent = '    '
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0

[tool.coverage.paths]
source = ["beaconator/backend"]

[tool.coverage.run]
branch = true
source = ["beaconator"]

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
addopts = "--cov"
testpaths = [
    "tests",
]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

